{"version":3,"sources":["./src/app/account/information/reset-details/reset-details.component.ts","./src/app/account/information/reset-details/reset-details.component.html","./src/app/account/address/address.component.ts","./src/app/account/address/address.component.html","./src/app/account/list-orders/list-orders.component.ts","./src/app/account/list-orders/list-orders.component.html","./src/app/account/information/information.component.ts","./src/app/account/information/information.component.html","./src/utils/date.ts","./src/app/account/account.routes.ts","./src/app/account/help/help.component.ts","./src/app/account/help/help.component.html","./src/app/account/account.component.ts","./src/app/account/account.component.html","./src/app/account/account.module.ts","./src/app/account/information/reset-password/reset-password.component.ts","./src/app/account/information/reset-password/reset-password.component.html"],"names":[],"mappings":"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","file":"account-account-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AccountService } from '../../../services/account.service';\nimport * as fromApp from '../../../store/app.reducers';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as BlankValidators from '../../../../utils/validators/blank.validator';\nimport * as AuthActions from '../../../store/auth/auth.actions';\nimport { throwError } from 'rxjs';\nimport { catchError, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-reset-details',\n  templateUrl: './reset-details.component.html',\n  styleUrls: ['./reset-details.component.scss']\n})\nexport class ResetDetailsComponent implements OnInit {\n\n  detailsForm: FormGroup;\n  innerLoading = true;\n\n  constructor(private accountService: AccountService, private store: Store<fromApp.AppState>, private router: Router) { }\n\n  ngOnInit() {\n\n    this.detailsForm = new FormGroup({\n      firstName: new FormControl(null, [Validators.pattern('^[a-zA-Z\\\\s]+$'), BlankValidators.checkIfBlankValidator, Validators.minLength(3), Validators.maxLength(52)]),\n      lastName: new FormControl(null, [Validators.pattern('^[a-zA-Z\\\\s]+$'), BlankValidators.checkIfBlankValidator, Validators.minLength(3), Validators.maxLength(52)]),\n      phone: new FormControl(null, [BlankValidators.checkIfBlankValidator, Validators.pattern('[0-9]+'), Validators.minLength(11), Validators.maxLength(12)]),\n    });\n\n    this.accountService.getUser().pipe(take(1), catchError(error => {\n      this.store.dispatch(new AuthActions.SignOut());\n      this.router.navigate(['/']);\n      return throwError(error);\n    }\n    )).subscribe(data => {\n      this.detailsForm.patchValue({\n        firstName: data.firstName,\n        lastName: data.lastName,\n        phone: data.phone,\n      });\n\n      this.innerLoading = false;\n    });\n  }\n\n  onSubmitDetailsForm() {\n    this.innerLoading = true;\n\n\n    const user = {\n      firstName: this.detailsForm.value?.firstName?.trim()?.length ? this.detailsForm.value.firstName.trim() : null,\n      lastName: this.detailsForm.value?.lastName?.trim()?.length ? this.detailsForm.value.lastName.trim() : null,\n      phone: this.detailsForm.value?.phone?.length ? this.detailsForm.value.phone : null,\n    };\n\n    this.accountService.updateUser(user)\n      .pipe(take(1), catchError(\n        error => {\n          alert('An error occurred. Please refresh your page.');\n          return throwError(error);\n        }\n      ))\n      .subscribe(data => {\n        this.innerLoading = false;\n        alert('Success! Your information has been changed.');\n      });\n\n  }\n\n\n}\n","<div class=\"reset-details\">\n  <div class=\"title\">\n    <p>User Information</p>\n  </div>\n  <hr>\n  <div *ngIf=\"innerLoading\" class=\"loader\"></div>\n\n  <div *ngIf=\"!innerLoading\">\n    <form [formGroup]=\"detailsForm\" (ngSubmit)=\"onSubmitDetailsForm()\">\n      <div class=\"info row\">\n        <div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label for=\"firstName\">NAME</label>\n            <input type=\"text\" id=\"firstName\" class=\"form-control\" name=\"firstName\" formControlName=\"firstName\"\n              [maxlength]=\"52\">\n            <span *ngIf=\"detailsForm.get('firstName').invalid && detailsForm.get('firstName').touched\">\n              <span *ngIf=\"detailsForm.get('firstName').errors['required']\" class=\"alert-danger\">This field is\n                required!</span>\n            </span>\n          </div>\n        </div>\n\n        <div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label for=\"lastName\">SURNAME</label>\n            <input type=\"text\" id=\"lastName\" class=\"form-control\" name=\"lastName\" formControlName=\"lastName\"\n              [maxlength]=\"52\">\n            <span *ngIf=\"detailsForm.get('lastName').invalid && detailsForm.get('lastName').touched\">\n              <span *ngIf=\"detailsForm.get('lastName').errors['required']\" class=\"alert-danger\">This field is\n                required!</span>\n            </span>\n          </div>\n        </div>\n\n      </div>\n      <div class=\"info row\">\n        <div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label for=\"phone\">PHONE NUMBER</label>\n            <input type=\"text\" id=\"phone\" class=\"form-control\" name=\"phone\" formControlName=\"phone\" [maxlength]=\"12\">\n            <span *ngIf=\"detailsForm.get('phone').invalid && detailsForm.get('phone').touched\" class=\"alert-danger\">\n              Please enter a valid phone number!\n            </span>\n          </div>\n        </div>\n        <div class=\"col-md-6\">\n\n        </div>\n      </div>\n\n      <div class=\"row controls\">\n        <div class=\"col-md-12\">\n          <button class=\"btn btn-info\" type=\"submit\" [disabled]=\"detailsForm.invalid || detailsForm.pending\">\n            Update\n          </button>\n        </div>\n\n      </div>\n    </form>\n  </div>\n</div>\n","import { AccountService } from 'src/app/services/account.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as BlankValidators from '../../../utils/validators/blank.validator';\nimport { catchError, take } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\n@Component({\n  selector: 'app-address',\n  templateUrl: './address.component.html',\n  styleUrls: ['./address.component.scss']\n})\nexport class AddressComponent implements OnInit {\n\n  addressForm: FormGroup;\n  innerLoading = true;\n\n  constructor(private accountService: AccountService) {\n  }\n\n  ngOnInit() {\n    this.addressForm = new FormGroup({\n      address: new FormControl(null, [Validators.pattern('[0-9a-zA-Z #,-]+'), BlankValidators.checkIfBlankValidator, Validators.minLength(3), Validators.maxLength(240)]),\n      city: new FormControl(null, [Validators.pattern('^[a-zA-Z\\\\s]+$'), BlankValidators.checkIfBlankValidator, Validators.minLength(3), Validators.maxLength(100)]),\n      state: new FormControl(null, [Validators.pattern('^[a-zA-Z\\\\s]+$'), BlankValidators.checkIfBlankValidator, Validators.minLength(3), Validators.maxLength(40)]),\n      zip: new FormControl(null, [Validators.pattern('^[0-9]*$'), BlankValidators.checkIfBlankValidator, Validators.maxLength(6), Validators.minLength(5)]),\n      country: new FormControl(null, [Validators.pattern('^[a-zA-Z\\\\s]+$'), BlankValidators.checkIfBlankValidator, Validators.minLength(3), Validators.maxLength(40)])\n    });\n\n    this.accountService.getUser().pipe(take(1)).subscribe(data => {\n      this.addressForm.patchValue({\n        address: data.address,\n        city: data.city,\n        state: data.state,\n        zip: data.zip,\n        country: data.country\n      });\n\n      this.innerLoading = false;\n    });\n  }\n\n  onSubmitAddressForm() {\n    this.innerLoading = true;\n\n    const user = {\n      address: this.addressForm.value?.address?.trim()?.length ? this.addressForm.value.address.trim() : null,\n      city: this.addressForm.value?.city?.trim()?.length ? this.addressForm.value.city.trim() : null,\n      state: this.addressForm.value?.state?.trim()?.length ? this.addressForm.value.state.trim() : null,\n      zip: this.addressForm.value?.zip?.trim()?.length ? this.addressForm.value.zip.trim() : null,\n      country: this.addressForm.value?.country?.trim()?.length ? this.addressForm.value.country.trim() : null\n    };\n\n    this.accountService.updateUserAddress(user)\n      .pipe(take(1), catchError(\n        error => {\n          alert('An error occurred. Please refresh your page.');\n          return throwError(error);\n        }\n      ))\n      .subscribe(data => {\n        this.innerLoading = false;\n        alert('Success! Your address has been changed.');\n      });\n\n  }\n\n}\n","<div class=\"address container\">\r\n  <div class=\"title\">\r\n    <p>Address</p>\r\n  </div>\r\n  <hr>\r\n  <div *ngIf=\"innerLoading\" class=\"loader\"></div>\r\n\r\n  <div *ngIf=\"!innerLoading\">\r\n    <form [formGroup]=\"addressForm\" (ngSubmit)=\"onSubmitAddressForm()\">\r\n      <div class=\"info\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"country\">COUNTRY</label>\r\n              <input type=\"text\" id=\"country\" class=\"form-control\" name=\"country\" formControlName=\"country\"\r\n                [maxlength]=\"240\">\r\n              <span *ngIf=\"addressForm.get('country').invalid && addressForm.get('country').touched\">\r\n                <span *ngIf=\"addressForm.get('country').errors['required']\" class=\"alert-danger\">This field is\r\n                  required!</span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"city\">CITY</label>\r\n              <input type=\"text\" id=\"city\" class=\"form-control\" name=\"city\" formControlName=\"city\" [maxlength]=\"240\">\r\n              <span *ngIf=\"addressForm.get('city').invalid && addressForm.get('city').touched\">\r\n                <span *ngIf=\"addressForm.get('city').errors['required']\" class=\"alert-danger\">This field is\r\n                  required!</span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"state\">STATE</label>\r\n              <input type=\"text\" id=\"state\" class=\"form-control\" name=\"state\" formControlName=\"state\" [maxlength]=\"240\">\r\n              <span *ngIf=\"addressForm.get('state').invalid && addressForm.get('state').touched\">\r\n                <span class=\"alert-danger\">Please enter a valid state</span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"zip\">ZIP</label>\r\n              <input type=\"text\" id=\"zip\" class=\"form-control\" name=\"zip\" formControlName=\"zip\" [maxlength]=\"6\"\r\n                [minlength]=\"5\">\r\n              <span *ngIf=\"addressForm.get('zip').invalid && addressForm.get('zip').touched\" class=\"alert-danger\">\r\n                Please enter a valid zip number!\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"form-group\">\r\n              <label for=\"address\">ADDRESS</label>\r\n              <textarea type=\"text\" id=\"address\" class=\"form-control\" name=\"address\" formControlName=\"address\" rows=\"3\">\r\n              </textarea>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n      <div class=\"row controls\">\r\n        <div class=\"col-md-12\">\r\n          <button class=\"btn btn-info\" type=\"submit\" [disabled]=\"addressForm.invalid || addressForm.pending\">\r\n            Update\r\n          </button>\r\n        </div>\r\n\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Orders } from './../../store/model';\nimport { Component, OnInit } from '@angular/core';\nimport { throwError } from 'rxjs';\nimport { OrderService } from '../../services/order.service';\nimport { catchError, take } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { getLocaleDate } from 'src/utils/date';\n\n@Component({\n  selector: 'app-list-orders',\n  templateUrl: './list-orders.component.html',\n  styleUrls: ['./list-orders.component.scss']\n})\nexport class ListOrdersComponent implements OnInit {\n\n  orders: Array<Orders>;\n  fetchError = false;\n  noOrders = false;\n  page = 1;\n  pageSize = 3;\n  collectionSize = 0;\n\n  innerLoading = true;\n\n  constructor(private orderService: OrderService, private router: Router) {\n  }\n\n  ngOnInit() {\n    this.orderService.getAllOrdersCount()\n      .pipe(take(1), catchError(\n        error => {\n          alert('An error occurred loading orders. Please refresh your page.');\n          return throwError(error);\n        }\n      ))\n      .subscribe((data: number) => {\n        if (data === 0) {\n          this.noOrders = true;\n          this.innerLoading = false;\n        } else {\n          this.pageSize = this.orderService.getPageSize();\n          this.collectionSize = data;\n          this.pageNavigation();\n        }\n      });\n\n  }\n\n  convertDate(date: number) {\n    return getLocaleDate(date);\n  }\n\n  pageNavigation() {\n    this.orders = [];\n    this.innerLoading = true;\n    this.orderService.getAllOrders(this.page - 1)\n      .pipe(take(1), catchError(\n        error => {\n          this.fetchError = true;\n          this.innerLoading = false;\n          return throwError(error);\n        }\n      ))\n      .subscribe(data => {\n        this.orders = data;\n        this.innerLoading = false;\n      });\n  }\n\n  goToItem(productUrl) {\n    this.router.navigate(['/detail/', productUrl]);\n  }\n}\n","<div class=\"list-orders container\">\n\n    <div class=\"title row\">\n        <div class=\"col-md-12\">\n            <p>Orders</p>\n        </div>\n    </div>\n    <hr>\n\n    <div *ngIf=\"fetchError\" class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"alert-warning\">An error occurred. Please try again.</div>\n        </div>\n    </div>\n\n    <div *ngIf=\"noOrders\" class=\"row\">\n        <div class=\"col-md-12\">\n            <p class=\"no-order\">You do not have any orders. <a routerLink=\"/browse\">Browse now!</a></p>\n        </div>\n    </div>\n\n    <div *ngIf=\"innerLoading\" class=\"loader\"></div>\n\n    <div *ngIf=\"!fetchError\" class=\"row\">\n        <div *ngFor=\"let order of orders\" class=\"order col-md-12\">\n            <div class=\"order-title\">\n                <div class=\"row\">\n                    <div class=\"col-md-3\">\n                        <p>ORDER: <span>#{{order.id}}</span></p>\n                    </div>\n                    <div class=\"date col-md-6\">\n                        <p>DATE: <span>{{convertDate(order.date) }}</span></p>\n                    </div>\n                    <div class=\"status col-md-3\">\n                        <p>STATUS: <span>{{order.shipped === 0 ? 'Preparing' :  'Shipped'}}</span></p>\n                    </div>\n                </div>\n            </div>\n            <hr>\n            <div class=\"row\">\n                <div class=\"col-md-7 left-panel\">\n                    <div class=\"row\">\n                        <div class=\"col-md-6 col-6\">\n                            <p>Name: <span>{{order.shipName}}</span></p>\n                        </div>\n                        <div class=\"col-md-6 col-6\">\n                            <p>Phone: <span>{{order.phone}}</span></p>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6 col-6\">\n                            <p>Country: <span>{{order.country}}</span></p>\n                        </div>\n                        <div class=\"col-md-6 col-6\">\n                            <p>City: <span>{{order.city}}</span></p>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6 col-6\">\n                            <p>State: <span>{{order.state}}</span></p>\n                        </div>\n                        <div class=\"col-md-6 col-6\">\n                            <p>Zip Code: <span>{{order.zip}}</span></p>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6 col-6\">\n                            <p>Cargo Price: <span>Rs {{order.totalCargoPrice}} </span></p>\n                        </div>\n                        <div class=\"col-md-6 col-6\">\n                            <p>Final Price: <span> Rs {{ order.totalPrice }} </span></p>\n                        </div>\n                    </div>\n                    <div class=\"row\" *ngIf=\"order.discount\">\n                        <div class=\"col-md-6 col-6\">\n                            <p>Discount: <span>{{order.discount.discountPercent}}%</span></p>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-12 col-12\">\n                            <p>Ship Address: <span>{{order.shipAddress}}</span></p>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-12 col-12\">\n                            <p>Billing Address: <span>{{order.billingAddress}}</span></p>\n                        </div>\n                    </div>\n\n                </div>\n                <div class=\"col-md-5 right-panel\">\n                    <div class=\"row item-list\">\n                        <div *ngFor=\"let orderDetail of order.orderItems\" class=\"col-md-12 col-12 pb-4\">\n                            <div class=\"row item\" (click)=\"goToItem(orderDetail.url)\">\n                                <div class=\"col-md-4\">\n                                    <div class=\"color\" [ngStyle]=\"{'background-color': orderDetail.color.hex}\"></div>\n                                    <img src=\"{{orderDetail.thumb}}\" alt=\"{{orderDetail.name}}\">\n                                </div>\n                                <div class=\"col-md-8 details\">\n                                    <div class=\"row\">\n                                        <div class=\"col-md-12\">\n                                            <p class=\"product-name\">{{orderDetail.name}}</p>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"col-md-6\">\n                                            <p class=\"amount\">Amount: <span>{{orderDetail.amount}}</span></p>\n                                        </div>\n                                        <div class=\"col-md-6\">\n                                            <p class=\"price\">Rs {{orderDetail.price}} </p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n                <hr>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"row bottom\">\n        <div class=\"col md-12 col-12\">\n            <ngb-pagination *ngIf=\"!noOrders\" [collectionSize]=\"collectionSize\" [pageSize]=\"pageSize\" [(page)]=\"page\" [rotate]=\"true\" [maxSize]=\"5\" (pageChange)=\"pageNavigation()\" class=\"d-flex justify-content-end\" aria-label=\"pagination\"></ngb-pagination>\n        </div>\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-information',\n  templateUrl: './information.component.html',\n  styleUrls: ['./information.component.scss']\n})\nexport class InformationComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"information container\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <app-reset-details></app-reset-details>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <app-reset-password></app-reset-password>\n    </div>\n  </div>\n</div>\n","const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' };\n\nexport function getLocaleDate(dateInMilliseconds: number): string {\n  return new Date(dateInMilliseconds).toLocaleDateString(undefined, options);\n}\n","import { HelpComponent } from './help/help.component';\r\nimport { AddressComponent } from './address/address.component';\r\nimport { Routes } from '@angular/router';\r\nimport { AccountComponent } from './account.component';\r\nimport { ListOrdersComponent } from './list-orders/list-orders.component';\r\nimport { AuthGuardService } from '../services/auth-guard.service';\r\nimport { InformationComponent } from './information/information.component';\r\n\r\n\r\nexport const AccountRoutes: Routes = [\r\n  {\r\n    path: '', component: AccountComponent, canActivate: [AuthGuardService],\r\n    children: [\r\n      { path: '', redirectTo: 'information', pathMatch: 'full' },\r\n      { path: 'information', component: InformationComponent },\r\n      { path: 'orders', component: ListOrdersComponent },\r\n      { path: 'address', component: AddressComponent },\r\n      { path: 'help', component: HelpComponent }\r\n    ]\r\n  }\r\n];\r\n","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-help',\n  templateUrl: './help.component.html',\n  styleUrls: ['./help.component.scss']\n})\nexport class HelpComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"help container\">\r\n  <div class=\"title row\">\r\n    <div class=\"col-md-12\">\r\n      <p>Help</p>\r\n    </div>\r\n  </div>\r\n  <hr>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <p>Please visit <a routerLink=\"/faq\">FAQ.</a></p>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.scss']\n})\nexport class AccountComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n\n  }\n\n\n}\n","<div class=\"account container\">\n  <div class=\"row\">\n    <div class=\"links col-md-3\">\n      <div class=\"title\">\n        <p>Account</p>\n      </div>\n      <div>\n        <a routerLink=\"/account/information\" routerLinkActive=\"active\">\n          <i class=\"fa fa-user-o\" aria-hidden=\"true\"></i>\n          <p>User Information</p>\n        </a>\n      </div>\n      <div>\n        <a routerLink=\"/account/orders\" routerLinkActive=\"active\"> <i class=\"fa fa-archive\" aria-hidden=\"true\"></i>\n          <p>Orders</p>\n        </a>\n      </div>\n      <div>\n        <a routerLink=\"/account/address\" routerLinkActive=\"active\"><i class=\"fa fa-home\" aria-hidden=\"true\"></i>\n          <p>Address</p>\n        </a>\n      </div>\n      <div>\n        <a routerLink=\"/account/help\" routerLinkActive=\"active\"> <i class=\"fa fa-question-circle-o\"\n            aria-hidden=\"true\"></i>\n          <p>Help</p>\n        </a>\n      </div>\n    </div>\n    <div class=\"panel col-md-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { AuthGuardService } from './../services/auth-guard.service';\nimport { HelpComponent } from './help/help.component';\nimport { InformationComponent } from './information/information.component';\nimport { AddressComponent } from './address/address.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AccountComponent } from './account.component';\nimport { RouterModule } from '@angular/router';\nimport { AccountRoutes } from './account.routes';\nimport { ListOrdersComponent } from './list-orders/list-orders.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ResetPasswordComponent } from './information/reset-password/reset-password.component';\nimport { ResetDetailsComponent } from './information/reset-details/reset-details.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(AccountRoutes),\n    ReactiveFormsModule,\n    NgbModule\n  ],\n  declarations: [AccountComponent, ListOrdersComponent, AddressComponent, HelpComponent,\n    InformationComponent, ResetPasswordComponent, ResetDetailsComponent],\n  providers: [AuthGuardService]\n})\nexport class AccountModule {\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AccountService } from '../../../services/account.service';\nimport * as PasswordValidators from '../../../../utils/validators/password.validator';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as BlankValidators from '../../../../utils/validators/blank.validator';\nimport { throwError } from 'rxjs';\nimport { catchError, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  resetPasswordForm: FormGroup;\n  innerLoading = false;\n\n  constructor(private accountService: AccountService) {\n  }\n\n  ngOnInit() {\n    this.resetPasswordForm = new FormGroup({\n      oldPassword: new FormControl(null, [Validators.required, BlankValidators.checkIfBlankValidator, Validators.minLength(6), Validators.maxLength(52)]),\n      newPasswordGroup: new FormGroup({\n        newPassword: new FormControl(null, [Validators.required, BlankValidators.checkIfBlankValidator, Validators.minLength(6), Validators.maxLength(52)]),\n        newPasswordConfirm: new FormControl(null, [Validators.required, BlankValidators.checkIfBlankValidator, Validators.minLength(6)])\n      }, PasswordValidators.passwordMatchCheckValidator),\n    });\n  }\n\n  onSubmitResetPassword() {\n    this.innerLoading = true;\n    this.accountService.resetPassword(\n      this.resetPasswordForm.value.oldPassword,\n      this.resetPasswordForm.value.newPasswordGroup.newPassword,\n      this.resetPasswordForm.value.newPasswordGroup.newPasswordConfirm)\n      .pipe(take(1), catchError(\n        error => {\n          this.innerLoading = false;\n          alert('Error resetting password. Please try again.');\n          return throwError(error);\n        }\n      ))\n      .subscribe(res => {\n        this.innerLoading = false;\n        alert('Success! Your password has been changed.');\n        this.resetPasswordForm.reset();\n      });\n  }\n\n}\n","<div class=\"reset-password\">\n  <div class=\"title\">\n    <p>Change Password</p>\n  </div>\n  <hr>\n  <div *ngIf=\"innerLoading\" class=\"loader\"></div>\n\n  <div *ngIf=\"!innerLoading\">\n    <form [formGroup]=\"resetPasswordForm\" (ngSubmit)=\"onSubmitResetPassword()\">\n      <div class=\"info row\">\n        <div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label for=\"oldPassword\">CURRENT PASSWORD</label>\n            <input type=\"password\" id=\"oldPassword\" class=\"form-control\" name=\"oldPassword\" placeholder=\"Password\"\n              formControlName=\"oldPassword\" [maxlength]=\"140\">\n            <span *ngIf=\"resetPasswordForm.get('oldPassword').invalid && resetPasswordForm.get('oldPassword').touched\">\n              <span *ngIf=\"resetPasswordForm.get('oldPassword').errors['required']\" class=\"alert-danger\">This field is\n                required!</span>\n              <span *ngIf=\"resetPasswordForm.get('oldPassword').errors['minlength']\" class=\"alert-danger\">The password\n                should at least be 6 digits!</span>\n            </span>\n          </div>\n\n        </div>\n      </div>\n\n      <div class=\"info row\" formGroupName=\"newPasswordGroup\">\n\n        <div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label for=\"newPassword\"></label>\n            <input type=\"password\" id=\"newPassword\" class=\"form-control\" name=\"newPassword\" placeholder=\"New Password\"\n              formControlName=\"newPassword\" [maxlength]=\"140\">\n            <span\n              *ngIf=\"resetPasswordForm.get('newPasswordGroup.newPassword').invalid && resetPasswordForm.get('newPasswordGroup.newPassword').touched\">\n              <span *ngIf=\"resetPasswordForm.get('newPasswordGroup.newPassword').errors['required']\"\n                class=\"alert-danger\">This field is required!</span>\n              <span *ngIf=\"resetPasswordForm.get('newPasswordGroup.newPassword').errors['minlength']\"\n                class=\"alert-danger\">The password should at least be 6 digits!</span>\n            </span>\n            <span\n              *ngIf=\"resetPasswordForm.get('newPasswordGroup').invalid && resetPasswordForm.get('newPasswordGroup').touched\">\n              <span\n                *ngIf=\"resetPasswordForm.get('newPasswordGroup').errors != null && resetPasswordForm.get('newPasswordGroup').errors['noMatch']\"\n                class=\"alert-danger\">The passwords must match!</span>\n            </span>\n          </div>\n\n        </div>\n\n        <div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label for=\"newPasswordConfirm\"></label>\n            <input type=\"password\" id=\"newPasswordConfirm\" class=\"form-control\" name=\"newPasswordConfirm\"\n              placeholder=\"New Password Again\" formControlName=\"newPasswordConfirm\" [maxlength]=\"140\">\n            <span\n              *ngIf=\"resetPasswordForm.get('newPasswordGroup.newPasswordConfirm').invalid && resetPasswordForm.get('newPasswordGroup.newPasswordConfirm').touched\">\n              <span *ngIf=\"resetPasswordForm.get('newPasswordGroup.newPasswordConfirm').errors['required']\"\n                class=\"alert-danger\">This field is required!</span>\n              <span *ngIf=\"resetPasswordForm.get('newPasswordGroup.newPasswordConfirm').errors['minlength']\"\n                class=\"alert-danger\">The password should at least be 6 digits!</span>\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row controls\">\n        <div class=\"col-md-12\">\n          <button class=\"btn btn-info\" type=\"submit\"\n            [disabled]=\"resetPasswordForm.invalid || resetPasswordForm.pending\">\n            Update\n          </button>\n        </div>\n\n      </div>\n    </form>\n  </div>\n</div>\n"],"sourceRoot":"webpack:///"}